{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collec));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // dispatch(fetchCollectionsStart());\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/apple/Desktop/Microverse/React/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","collec","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACJ,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,8BAAD,EAAiCQ,QAAjC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACU,MAAD,CAAxB,CAAT;AACD,GALC,CAKA,OAAMC,KAAN,EAAa;AACb,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAVwC,CAYvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbG,eAAe,CAACiB,uBADH,EAEbZ,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot)\n  yield put(fetchCollectionsSuccess(collec))\n} catch(error) {\n  yield put(fetchCollectionsFailure(error.message))\n}\n\n  // dispatch(fetchCollectionsStart());\n\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}