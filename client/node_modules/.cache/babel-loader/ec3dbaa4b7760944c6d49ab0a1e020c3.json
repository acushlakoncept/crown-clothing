{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Microverse/React/crown-clothing/src/components/sign-up/sign-up.component.js\";\nimport React, { useState } from \"react\";\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     displayName: \"\",\n  //     email: \"\",\n  //     passowrd: \"\",\n  //     confirmPassword: \"\"\n  //   };\n  // }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    const {\n      signUpStart\n    } = this.props;\n\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = this.state;\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignUpTitle, {\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        handleChange: this.handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: this.handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        handleChange: this.handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        handleChange: this.handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/apple/Desktop/Microverse/React/crown-clothing/src/components/sign-up/sign-up.component.js"],"names":["React","useState","SignUpContainer","SignUpTitle","FormInput","CustomButton","connect","signUpStart","SignUp","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","props","alert","handleChange","name","value","target","setState","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\n\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = () => {\n  // constructor() {\n  //   super();\n\n  //   this.state = {\n  //     displayName: \"\",\n  //     email: \"\",\n  //     passowrd: \"\",\n  //     confirmPassword: \"\"\n  //   };\n  // }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const { displayName, email, password, confirmPassword } = this.state;\n    const { signUpStart } = this.props;\n\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    signUpStart({displayName, email, password});\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <SignUpContainer>\n        <SignUpTitle>I do not have an account</SignUpTitle>\n        <span>Sign up with your email and password</span>\n\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            handleChange={this.handleChange}\n            label=\"Display Name\"\n            required\n          />\n\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            handleChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            handleChange={this.handleChange}\n            label=\"Password\"\n            required\n          />\n\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            handleChange={this.handleChange}\n            label=\"Confirm Password\"\n            required\n          />\n\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\n        </form>\n      </SignUpContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: userCredentials =>\n    dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}